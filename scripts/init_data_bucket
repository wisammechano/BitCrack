#!/bin/bash

# G_SA_TOKEN: is the file download link token, acquire from firebase storage
if [[ -z "${G_SA_TOKEN}" ]]; then
  echo "ERROR: G_SA_TOKEN environment variable is not set."
  exit 1
fi

if [[ -z "${G_BUCKET}" ]]; then
  echo "ERROR: G_BUCKET environment variable is not set."
  exit 1
fi

if [[ -z "${DATA_DIR}" ]]; then
  echo "ERROR: DATA_DIR environment variable is not set."
  exit 1
fi

# Servie account credentials path
CREDENTIALS_PATH="/tmp/service_account.json"

# Check if service account file exists if it doesn't download it
if [ ! -f $CREDENTIALS_PATH ]; then
  echo "Service account file not found. Downloading..."
  G_SA_PATH="secure%2Fsa_user.json"
  G_TOKEN_LINK="https://firebasestorage.googleapis.com/v0/b/${G_BUCKET}/o/${G_SA_PATH}?alt=media&token=${G_SA_TOKEN}"
  curl -o $CREDENTIALS_PATH $G_TOKEN_LINK
  if [ $? -ne 0 ]; then
    echo "ERROR: Failed to download service account file."
    exit 1
  else
    echo "Service account file downloaded successfully."
  fi
else
  echo "Using existing service account file."
fi


# Mount path
MOUNT_PATH=$DATA_DIR

# Create Dir
mkdir -p $MOUNT_PATH

# Give permission to group
chmod g+w $MOUNT_PATH

BUCKET_DIR='data'


# Mount the bucket
mkdir -p $MOUNT_PATH
gcsfuse --key-file=$CREDENTIALS_PATH --only-dir $BUCKET_DIR $G_BUCKET $MOUNT_PATH

# Verify mounting
if mount | grep "gcsfuse" > /dev/null; then
  echo "Bucket mounted successfully at $MOUNT_PATH"
else
  echo "ERROR: Bucket mounting failed."
  exit 1
fi
