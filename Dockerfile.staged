ARG BUILD_DIR="/app_build"

# Step 1: Build the application
FROM nvidia/cuda:12.6.2-devel-ubuntu24.04 as builder

ARG BUILD_DIR

# Install necessary packages
RUN apt-get update && apt-get install -y \
  build-essential \
  g++ \
  make \
  && rm -rf /var/lib/apt/lists/*

# Set the working directory to BUILD_DIR and copy source code
WORKDIR $BUILD_DIR
COPY ./src .

# Build the project with CUDA support
RUN make BUILD_CUDA=1

# Step 2: Initialize Jupyter environment
FROM jupyter/minimal-notebook:latest AS runner

ARG BUILD_DIR

# Set environment variables for paths and SUDO
ENV APP_DIR=/app \
    DATA_DIR=/app/data \
    BIN_PATH=/app/bin/cuBitCrack \
    GRANT_SUDO=yes

# Move to APP_DIR and set up application files and scripts
WORKDIR $APP_DIR
COPY ./runner .
COPY ./scripts ./scripts

# Copy binaries from builder
COPY --from=builder $BUILD_DIR/bin ./bin

# Make runner and scripts executable and move ownership to default user while elevating access
USER root
RUN chmod +x ./run ./scripts/* ./bin/* && chown -R ${NB_UID}:${NB_GID} $APP_DIR && echo "$NB_USER ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/notebook



# Install Cuda Runtime LIB
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cuda-libraries-12-6 \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables for CUDA paths if necessary
ENV LD_LIBRARY_PATH="/usr/local/cuda/lib64:${LD_LIBRARY_PATH}"

# Install Google Cloud Storage FUSE
RUN ./scripts/install_gcsfuse

USER ${NB_UID}

# Set the entrypoint to start Jupyter Notebook
ENTRYPOINT ["start-notebook.sh"]