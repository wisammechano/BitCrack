#---------------------------------------------------------------------
# Makefile for BSGS
#
# Author : Jean-Luc PONS

ifdef gpu

SRC = SECPK1/Int.cpp SECPK1/IntGroup.cpp SECPK1/IntMod.cpp \
      SECPK1/Point.cpp SECPK1/Random.cpp SECPK1/SECP256K1.cpp \
      Kangaroo/Backup.cpp Kangaroo/Check.cpp Kangaroo/HashTable.cpp \
      Kangaroo/Kangaroo.cpp Kangaroo/main.cpp Kangaroo/Merge.cpp \
      Kangaroo/Network.cpp Kangaroo/PartMerge.cpp Kangaroo/Thread.cpp \
      Kangaroo/Timer.cpp GPU/GPUEngine.o

OBJDIR = obj

OBJET = $(addprefix $(OBJDIR)/, \
      SECPK1/Int.o SECPK1/IntGroup.o SECPK1/IntMod.o \
      SECPK1/Point.o SECPK1/Random.o SECPK1/SECP256K1.o \
      Kangaroo/Backup.o Kangaroo/Check.o Kangaroo/HashTable.o \
      Kangaroo/Kangaroo.o Kangaroo/main.o Kangaroo/Merge.o \
      Kangaroo/Network.o Kangaroo/PartMerge.o Kangaroo/Thread.o \
      Kangaroo/Timer.o GPU/GPUEngine.o)

else

SRC = SECPK1/Int.cpp SECPK1/IntGroup.cpp SECPK1/IntMod.cpp \
      SECPK1/Point.cpp SECPK1/Random.cpp SECPK1/SECP256K1.cpp \
      Kangaroo/Backup.cpp Kangaroo/Check.cpp Kangaroo/HashTable.cpp \
      Kangaroo/Kangaroo.cpp Kangaroo/main.cpp Kangaroo/Merge.cpp \
      Kangaroo/Network.cpp Kangaroo/PartMerge.cpp Kangaroo/Thread.cpp \
      Kangaroo/Timer.cpp

OBJDIR = obj

OBJET = $(addprefix $(OBJDIR)/, \
      SECPK1/Int.o SECPK1/IntGroup.o SECPK1/IntMod.o \
      SECPK1/Point.o SECPK1/Random.o SECPK1/SECP256K1.o \
      Kangaroo/Backup.o Kangaroo/Check.o Kangaroo/HashTable.o \
      Kangaroo/Kangaroo.o Kangaroo/main.o Kangaroo/Merge.o \
      Kangaroo/Network.o Kangaroo/PartMerge.o Kangaroo/Thread.o \
      Kangaroo/Timer.o)

endif

CXX        = g++
CUDA       = /usr/local/cuda
CXXCUDA    = /usr/bin/g++
NVCC       = $(CUDA)/bin/nvcc


all: driverquery bsgs

ifdef gpu
ifndef ccap
driverquery:
	. ./detect_cuda.sh
ccap=$(shell cat cuda_version.txt)
else
driverquery:
	@echo "Compiling against manually selected CUDA version ${ccap}"
endif
else
driverquery:
endif


ifdef gpu

ifdef debug
CXXFLAGS   = -DWITHGPU -m64 -mssse3 -Wno-unused-result -Wno-write-strings -g -I. -I$(CUDA)/include
else
CXXFLAGS   = -DWITHGPU -m64 -mssse3 -Wno-unused-result -Wno-write-strings -O2 -I. -I$(CUDA)/include
endif
LFLAGS     = -lpthread -L$(CUDA)/lib64 -lcudart

else

ifdef debug
CXXFLAGS   = -m64 -mssse3 -Wno-unused-result -Wno-write-strings -g -I. -I$(CUDA)/include
else
CXXFLAGS   =  -m64 -mssse3 -Wno-unused-result -Wno-write-strings -O2 -I. -I$(CUDA)/include
endif
LFLAGS     = -lpthread

endif

#--------------------------------------------------------------------

ifdef gpu
ifdef debug
$(OBJDIR)/GPU/GPUEngine.o: GPU/GPUEngine.cu
	$(NVCC) -G -maxrregcount=0 --ptxas-options=-v --compile --compiler-options -fPIC -ccbin $(CXXCUDA) -m64 -g -I$(CUDA)/include -gencode=arch=compute_$(ccap),code=sm_$(ccap) -o $(OBJDIR)/GPU/GPUEngine.o -c GPU/GPUEngine.cu
else
$(OBJDIR)/GPU/GPUEngine.o: GPU/GPUEngine.cu
	$(NVCC) -maxrregcount=0 --ptxas-options=-v --compile --compiler-options -fPIC -ccbin $(CXXCUDA) -m64 -O2 -I$(CUDA)/include -gencode=arch=compute_$(ccap),code=sm_$(ccap) -o $(OBJDIR)/GPU/GPUEngine.o -c GPU/GPUEngine.cu
endif
endif

$(OBJDIR)/%.o : %.cpp
	$(CXX) $(CXXFLAGS) -o $@ -c $<

bsgs: $(OBJET)
	@echo Making Kangaroo-256...
	$(CXX) $(OBJET) $(LFLAGS) -o kangaroo-256

$(OBJET): | $(OBJDIR)/Kangaroo $(OBJDIR)/SECPK1 $(OBJDIR)/GPU

$(OBJDIR)/Kangaroo:
	mkdir $(OBJDIR) && cd $(OBJDIR) && mkdir -p Kangaroo

$(OBJDIR)/GPU: $(OBJDIR)
	cd $(OBJDIR) && mkdir -p GPU

$(OBJDIR)/SECPK1: $(OBJDIR)
	cd $(OBJDIR) &&	mkdir -p SECPK1

clean:
	@echo Cleaning...
	@rm -f obj/Kangaroo/*.o
	@rm -f obj/GPU/*.o
	@rm -f obj/SECPK1/*.o
	@rm -f deviceQuery/*.o
	@rm -f cuda_version.txt
	@rm -f deviceQuery/cuda_build_log.txt

